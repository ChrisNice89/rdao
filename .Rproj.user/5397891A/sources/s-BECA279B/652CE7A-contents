


businessLogic <- R6Class(
  classname = "businessLogic",
  inherit = NULL,
  portable = TRUE,
  private = list(
    .validator = NULL,
    .connection = sqlConnection),

  public = list(
    provider = "",
    type = "",
    sql = "",

    initialize = function(connection) {
      private$.validator <- Validator$new(self)
      if (inherit(connection, "SqlConnection")) {

      } else {
        private$.validator$throwError("Connection ist ungültig", "initialize()")
      }
    },

    getQuality <- function() {
      sql.raw <- "SELECT * FROM diamonds WHERE cut IN (%s)"
      vals <-  c(Fair, Good, Very Good, Premium, Ideal)

      sql <-
        sprintf(qformat, paste0("\"", vals, "\"", collapse = ","))
      cat(sql)
      result <- private$.connection$createQuery(sql = sql)
    }
  )
)

daimond <- R6Class(
  classname = "Diamond",
  inherit = NULL,
  portable = TRUE,
  private = list(
    .validator = NULL,
    ,

    public = list(
      provider = "",
      type = "",
      sql = "",

      initialize = function(connection) {
        private$.validator <- Validator$new(self)
        if (inherit(connection, "SqlConnection")) {

        } else {
          private$.validator$throwError("Connection ist ungültig", "initialize()")
        }
      },

      getQuality <- function() {
        sql.raw <- "SELECT * FROM diamonds WHERE cut IN (%s)"
        vals <-  c(Fair, Good, Very Good, Premium, Ideal)

        sql <-
          sprintf(qformat, paste0("\"", vals, "\"", collapse = ","))
        cat(sql)
        result <- private$.connection$createQuery(sql = sql)
      }
    )
  )

  f <- factory()
  b <-
    f$dbFile("/Users/cnitz/Dev/R/rdao/db files external/Diamonds.db")
  cnn <- b$build()
  qry <- cnn$createQuery(sql = "Select * FROM diamonds")
  result <- qry$fetch(
  )
