#install.packages("DBI")
library(DBI)
library(RSQLite)

path<-"/Users/cnitz/Dev/R/rorm/data/diamonds.Rda"
#path<-"/Users/cnitz/Dev/R/rorm/data/kredit.Rdata"
df<-data.frame(get(load(path)))

df<-data.frame(diamonds)

dbWriteTable(con, "diamonds",  df)
dbListTables(con)
dbDisconnect(con)

path<-"/Users/cnitz/Dev/R/rdao/db files external/Diamonds.db"
con <- dbConnect(RSQLite::SQLite(),path)
print(dbCanConnect(RSQLite::SQLite(),path))
dbListTables(con)
dbDisconnect(con)
dbConnect(con)
dbIsValid(con)
dbDisconnect(con)
dbIsValid(con)


con <- dbConnect(RSQLite::SQLite(), "./mtcars.db")
data(mtcars)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
# Fetch all query results into a data frame:
re<-dbGetQuery(con, "SELECT * FROM mtcars")



df <- dbSendQuery(con, 'SELECT * FROM mtcars')
rownames(df)
while (!dbHasCompleted(rs)) {
  df <- dbFetch(rs, n = 10)
  print(nrow(df))
}
dbClearResult(rs)


# Disconnect from the database
dbIsValid(con)
dbDisconnect(con)
dbIsValid(con)

if (file.exists(path)){

}

if (!dbIsValid(con)) {
  con <- dbConnect(RSQLite::SQLite(), ":memory:")
  dbDisconnect(con)
}


con <- dbConnect( odbc::odbc(), ":memory:")
dbCreateTable(con, "iris", iris)
dbReadTable(con, "iris")
dbDisconnect(con)
