% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HashMap.R
\docType{class}
\name{HashMap}
\alias{HashMap}
\title{Class providing some methods to store data into a hashtable and access stored items via key}
\format{\code{\link{R6Class}} object.}
\usage{
HashMap
}
\value{
Object of \code{\link{R6Class}} with methods for key-value mapping
}
\description{
R lists with named elements are not hashed.
Hash lookups are O(1), because during insert the key is converted to an integer using a hash function,
and then the value put in the space hash(key) % num_spots of an array num_spots long
(this is a big simplification and avoids the complexity of dealing with collisions).
Lookups of the key just require hashing the key to find the value's position
(which is O(1), versus a O(n) array lookup).
R lists use name lookups which are O(n).
}
\section{Fields}{

\describe{
\item{\code{field(s)}}{access all via ()}
}}

\section{Construction}{

```
HashMap$new()
```
}

\section{Methods}{

\describe{
  \item{Documentation}{For full documentation of each method go to https://github.com/ChrisNice89/ORM}
  \item{\code{new()}}{This method creates a HashMap \code{instance}.}
  \item{\code{put(key = "", value = NA)}}{store key-value pair(s)}
  \item{\code{get(key,unname=TRUE)}}{access item(s) with associated key(s)}}
}

\examples{
hm<-HashMap$new()
keys<- c("tic", "tac", "toe")
values <- c(1, 22, 333)

hm$put("key",1)
hm$put(key = keys,value = values)
hm$get(keys)
hm$get("tic")
hm$size()
hm
hm$remove("tic")
hm$get("tic")
hm$size()
hm$getKeys()[1]
hm$getValues()

}
\concept{utils}
\keyword{mapping}
